@model MenuHelperModel
 
@helper  TopMenu(List<SiteMapNodeModel> nodeList)
{
    @:<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        @:<div class="container">
            @:<div class="navbar-header">
                @:<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    @:<span class="sr-only">Toggle navigation</span>
                    @:<span class="icon-bar"></span>
                    @:<span class="icon-bar"></span>
                    @:<span class="icon-bar"></span>
                @:</button>
                @:<a class="navbar-brand" href="/">Barry Arnott</a>
            @:</div>
        @:<div class="navbar-collapse collapse">
            @:<ul class="nav navbar-nav">
            foreach (SiteMapNodeModel node in nodeList)
            {
                string url = node.IsClickable ? node.Url : "#";
 
                if (!node.Children.Any())
                {
        
                    //TODO: Add active class to current li
                    @:<li><a href="@url">@node.Title</a></li>
                }
                else
                {
                    @:<li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="@url">@node.Title <b class="caret"></b></a>@DropDownMenu(node.Children)</li>
                }
 
                if (node != nodeList.Last())
                {
                     @:<li class="divider-vertical"></li>
                }
            }
 
           @:</ul>
       @:</div>
   @:</div>
 @:</div>
}
 
@helper DropDownMenu(SiteMapNodeModelList nodeList)
{
  <ul class="dropdown-menu">
  @foreach (SiteMapNodeModel node in nodeList)
  {
    if (node.Title == "Separator")
    {
      @:<li class="divider"></li>
      continue;
    }
 
    string url = node.IsClickable ? node.Url : "#";
 
    if (!node.Children.Any())
    {
      @:<li><a href="@url">@node.Title</a></li>
    }
    else
    {
      @:<li class="dropdown-submenu"><a href="@url">@node.Title</a>@DropDownMenu(node.Children)</li>
    }
  }
  </ul>
}
 
@TopMenu(Model.Nodes)